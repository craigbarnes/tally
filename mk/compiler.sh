#!/bin/sh
# The output of this script is used to generate build/gen/compiler.mk
# shellcheck disable=SC2016,SC2086

set -eu
CC="$1"
LOGFILE="$2"

cc_option() {
    $CC "$@" -Werror -c -o /dev/null mk/basic.c 2>"$LOGFILE"
}

fmt_var() {
    echo "$2" | sed -E "/^\$/d; s/^ */$1 += /"
}

fmt_cflags() {
    fmt_var 'BASIC_CFLAGS' "$1"
}

detect_cflags() {
    if cc_option $1; then
        fmt_cflags "$1"
    fi
}

detect_cflags_any() {
    while test "$#" -gt 0; do
        if cc_option $1; then
            fmt_cflags "$1"
            break
        fi
        shift
    done
}

detect_cflags_for_var() {
    if cc_option $2; then
        fmt_var "$1" "$2"
    fi
}

if ! cc_option; then
    echo "$0:$LINENO: ERROR: Sanity test for \$CC ($CC) failed; check $LOGFILE" >&2
    exit 1
fi

echo '# Generated by mk/compiler.sh; do not edit'
detect_cflags_any '-std=gnu23' '-std=gnu11' '-std=gnu99'
detect_cflags '-fvisibility=hidden'
detect_cflags '@mk/cflags/warnings-gcc4.8.txt'
detect_cflags_any '@mk/cflags/warnings-gcc14.txt' '@mk/cflags/warnings-clang18.txt'
detect_cflags_for_var CC_SANITIZER_FLAGS '@mk/cflags/sanitizer.txt'
detect_cflags_for_var CC_NO_UNWIND_TABLES '-fno-asynchronous-unwind-tables'

# https://gcc.gnu.org/onlinedocs/cpp/Invocation.html#index-MD
# https://clang.llvm.org/docs/ClangCommandLineReference.html#cmdoption-clang-MD
if cc_option -MMD -MP -MF /dev/null; then
    echo 'CC_DEPFLAGS = -MMD -MP -MF $(@:.o=.mk)'
elif cc-option -MD -MF /dev/null; then
    echo 'CC_DEPFLAGS = -MD -MF $(@:.o=.mk)'
else
    echo 'CC_DEPFLAGS =' # Avoid inheriting from environment
fi
